// Code generated by go-swagger; DO NOT EDIT.

package policies

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/lunarway/release-manager/generated/http/models"
)

// PatchPolicyAutoReleaseReader is a Reader for the PatchPolicyAutoRelease structure.
type PatchPolicyAutoReleaseReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchPolicyAutoReleaseReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewPatchPolicyAutoReleaseCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewPatchPolicyAutoReleaseBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewPatchPolicyAutoReleaseInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 503:
		result := NewPatchPolicyAutoReleaseServiceUnavailable()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewPatchPolicyAutoReleaseCreated creates a PatchPolicyAutoReleaseCreated with default headers values
func NewPatchPolicyAutoReleaseCreated() *PatchPolicyAutoReleaseCreated {
	return &PatchPolicyAutoReleaseCreated{}
}

/* PatchPolicyAutoReleaseCreated describes a response with status code 201, with default header values.

Policy applied
*/
type PatchPolicyAutoReleaseCreated struct {
	Payload *models.ApplyAutoReleasePolicyResponse
}

func (o *PatchPolicyAutoReleaseCreated) Error() string {
	return fmt.Sprintf("[PATCH /policy/auto-release][%d] patchPolicyAutoReleaseCreated  %+v", 201, o.Payload)
}
func (o *PatchPolicyAutoReleaseCreated) GetPayload() *models.ApplyAutoReleasePolicyResponse {
	return o.Payload
}

func (o *PatchPolicyAutoReleaseCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ApplyAutoReleasePolicyResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchPolicyAutoReleaseBadRequest creates a PatchPolicyAutoReleaseBadRequest with default headers values
func NewPatchPolicyAutoReleaseBadRequest() *PatchPolicyAutoReleaseBadRequest {
	return &PatchPolicyAutoReleaseBadRequest{}
}

/* PatchPolicyAutoReleaseBadRequest describes a response with status code 400, with default header values.

Invalid payload
*/
type PatchPolicyAutoReleaseBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *PatchPolicyAutoReleaseBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /policy/auto-release][%d] patchPolicyAutoReleaseBadRequest  %+v", 400, o.Payload)
}
func (o *PatchPolicyAutoReleaseBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *PatchPolicyAutoReleaseBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchPolicyAutoReleaseInternalServerError creates a PatchPolicyAutoReleaseInternalServerError with default headers values
func NewPatchPolicyAutoReleaseInternalServerError() *PatchPolicyAutoReleaseInternalServerError {
	return &PatchPolicyAutoReleaseInternalServerError{}
}

/* PatchPolicyAutoReleaseInternalServerError describes a response with status code 500, with default header values.

Error response
*/
type PatchPolicyAutoReleaseInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *PatchPolicyAutoReleaseInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /policy/auto-release][%d] patchPolicyAutoReleaseInternalServerError  %+v", 500, o.Payload)
}
func (o *PatchPolicyAutoReleaseInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *PatchPolicyAutoReleaseInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchPolicyAutoReleaseServiceUnavailable creates a PatchPolicyAutoReleaseServiceUnavailable with default headers values
func NewPatchPolicyAutoReleaseServiceUnavailable() *PatchPolicyAutoReleaseServiceUnavailable {
	return &PatchPolicyAutoReleaseServiceUnavailable{}
}

/* PatchPolicyAutoReleaseServiceUnavailable describes a response with status code 503, with default header values.

Error response
*/
type PatchPolicyAutoReleaseServiceUnavailable struct {
	Payload *models.ErrorResponse
}

func (o *PatchPolicyAutoReleaseServiceUnavailable) Error() string {
	return fmt.Sprintf("[PATCH /policy/auto-release][%d] patchPolicyAutoReleaseServiceUnavailable  %+v", 503, o.Payload)
}
func (o *PatchPolicyAutoReleaseServiceUnavailable) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *PatchPolicyAutoReleaseServiceUnavailable) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
