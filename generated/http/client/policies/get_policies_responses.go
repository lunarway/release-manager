// Code generated by go-swagger; DO NOT EDIT.

package policies

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/lunarway/release-manager/generated/http/models"
)

// GetPoliciesReader is a Reader for the GetPolicies structure.
type GetPoliciesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPoliciesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetPoliciesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetPoliciesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewGetPoliciesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetPoliciesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewGetPoliciesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetPoliciesOK creates a GetPoliciesOK with default headers values
func NewGetPoliciesOK() *GetPoliciesOK {
	return &GetPoliciesOK{}
}

/* GetPoliciesOK describes a response with status code 200, with default header values.

Found policies
*/
type GetPoliciesOK struct {
	Payload *models.GetPoliciesResponse
}

func (o *GetPoliciesOK) Error() string {
	return fmt.Sprintf("[GET /policies][%d] getPoliciesOK  %+v", 200, o.Payload)
}
func (o *GetPoliciesOK) GetPayload() *models.GetPoliciesResponse {
	return o.Payload
}

func (o *GetPoliciesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GetPoliciesResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPoliciesBadRequest creates a GetPoliciesBadRequest with default headers values
func NewGetPoliciesBadRequest() *GetPoliciesBadRequest {
	return &GetPoliciesBadRequest{}
}

/* GetPoliciesBadRequest describes a response with status code 400, with default header values.

Invalid payload
*/
type GetPoliciesBadRequest struct {
	Payload *models.ErrorResponse
}

func (o *GetPoliciesBadRequest) Error() string {
	return fmt.Sprintf("[GET /policies][%d] getPoliciesBadRequest  %+v", 400, o.Payload)
}
func (o *GetPoliciesBadRequest) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetPoliciesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPoliciesUnauthorized creates a GetPoliciesUnauthorized with default headers values
func NewGetPoliciesUnauthorized() *GetPoliciesUnauthorized {
	return &GetPoliciesUnauthorized{}
}

/* GetPoliciesUnauthorized describes a response with status code 401, with default header values.

Provided access token was not found or is invalid
*/
type GetPoliciesUnauthorized struct {
	Payload *models.ErrorResponse
}

func (o *GetPoliciesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /policies][%d] getPoliciesUnauthorized  %+v", 401, o.Payload)
}
func (o *GetPoliciesUnauthorized) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetPoliciesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPoliciesNotFound creates a GetPoliciesNotFound with default headers values
func NewGetPoliciesNotFound() *GetPoliciesNotFound {
	return &GetPoliciesNotFound{}
}

/* GetPoliciesNotFound describes a response with status code 404, with default header values.

Invalid payload
*/
type GetPoliciesNotFound struct {
	Payload *models.ErrorResponse
}

func (o *GetPoliciesNotFound) Error() string {
	return fmt.Sprintf("[GET /policies][%d] getPoliciesNotFound  %+v", 404, o.Payload)
}
func (o *GetPoliciesNotFound) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetPoliciesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetPoliciesInternalServerError creates a GetPoliciesInternalServerError with default headers values
func NewGetPoliciesInternalServerError() *GetPoliciesInternalServerError {
	return &GetPoliciesInternalServerError{}
}

/* GetPoliciesInternalServerError describes a response with status code 500, with default header values.

Error response
*/
type GetPoliciesInternalServerError struct {
	Payload *models.ErrorResponse
}

func (o *GetPoliciesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /policies][%d] getPoliciesInternalServerError  %+v", 500, o.Payload)
}
func (o *GetPoliciesInternalServerError) GetPayload() *models.ErrorResponse {
	return o.Payload
}

func (o *GetPoliciesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ErrorResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
