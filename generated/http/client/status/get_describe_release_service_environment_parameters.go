// Code generated by go-swagger; DO NOT EDIT.

package status

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetDescribeReleaseServiceEnvironmentParams creates a new GetDescribeReleaseServiceEnvironmentParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetDescribeReleaseServiceEnvironmentParams() *GetDescribeReleaseServiceEnvironmentParams {
	return &GetDescribeReleaseServiceEnvironmentParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetDescribeReleaseServiceEnvironmentParamsWithTimeout creates a new GetDescribeReleaseServiceEnvironmentParams object
// with the ability to set a timeout on a request.
func NewGetDescribeReleaseServiceEnvironmentParamsWithTimeout(timeout time.Duration) *GetDescribeReleaseServiceEnvironmentParams {
	return &GetDescribeReleaseServiceEnvironmentParams{
		timeout: timeout,
	}
}

// NewGetDescribeReleaseServiceEnvironmentParamsWithContext creates a new GetDescribeReleaseServiceEnvironmentParams object
// with the ability to set a context for a request.
func NewGetDescribeReleaseServiceEnvironmentParamsWithContext(ctx context.Context) *GetDescribeReleaseServiceEnvironmentParams {
	return &GetDescribeReleaseServiceEnvironmentParams{
		Context: ctx,
	}
}

// NewGetDescribeReleaseServiceEnvironmentParamsWithHTTPClient creates a new GetDescribeReleaseServiceEnvironmentParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetDescribeReleaseServiceEnvironmentParamsWithHTTPClient(client *http.Client) *GetDescribeReleaseServiceEnvironmentParams {
	return &GetDescribeReleaseServiceEnvironmentParams{
		HTTPClient: client,
	}
}

/* GetDescribeReleaseServiceEnvironmentParams contains all the parameters to send to the API endpoint
   for the get describe release service environment operation.

   Typically these are written to a http.Request.
*/
type GetDescribeReleaseServiceEnvironmentParams struct {

	/* Count.

	   Number of releases to return

	   Default: 1
	*/
	Count *int64

	/* Environment.

	   Environment to get release for
	*/
	Environment string

	/* Namespace.

	   Namespace to find service in
	*/
	Namespace *string

	/* Service.

	   Service to find releases for
	*/
	Service string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get describe release service environment params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetDescribeReleaseServiceEnvironmentParams) WithDefaults() *GetDescribeReleaseServiceEnvironmentParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get describe release service environment params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetDescribeReleaseServiceEnvironmentParams) SetDefaults() {
	var (
		countDefault = int64(1)
	)

	val := GetDescribeReleaseServiceEnvironmentParams{
		Count: &countDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the get describe release service environment params
func (o *GetDescribeReleaseServiceEnvironmentParams) WithTimeout(timeout time.Duration) *GetDescribeReleaseServiceEnvironmentParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get describe release service environment params
func (o *GetDescribeReleaseServiceEnvironmentParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get describe release service environment params
func (o *GetDescribeReleaseServiceEnvironmentParams) WithContext(ctx context.Context) *GetDescribeReleaseServiceEnvironmentParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get describe release service environment params
func (o *GetDescribeReleaseServiceEnvironmentParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get describe release service environment params
func (o *GetDescribeReleaseServiceEnvironmentParams) WithHTTPClient(client *http.Client) *GetDescribeReleaseServiceEnvironmentParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get describe release service environment params
func (o *GetDescribeReleaseServiceEnvironmentParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithCount adds the count to the get describe release service environment params
func (o *GetDescribeReleaseServiceEnvironmentParams) WithCount(count *int64) *GetDescribeReleaseServiceEnvironmentParams {
	o.SetCount(count)
	return o
}

// SetCount adds the count to the get describe release service environment params
func (o *GetDescribeReleaseServiceEnvironmentParams) SetCount(count *int64) {
	o.Count = count
}

// WithEnvironment adds the environment to the get describe release service environment params
func (o *GetDescribeReleaseServiceEnvironmentParams) WithEnvironment(environment string) *GetDescribeReleaseServiceEnvironmentParams {
	o.SetEnvironment(environment)
	return o
}

// SetEnvironment adds the environment to the get describe release service environment params
func (o *GetDescribeReleaseServiceEnvironmentParams) SetEnvironment(environment string) {
	o.Environment = environment
}

// WithNamespace adds the namespace to the get describe release service environment params
func (o *GetDescribeReleaseServiceEnvironmentParams) WithNamespace(namespace *string) *GetDescribeReleaseServiceEnvironmentParams {
	o.SetNamespace(namespace)
	return o
}

// SetNamespace adds the namespace to the get describe release service environment params
func (o *GetDescribeReleaseServiceEnvironmentParams) SetNamespace(namespace *string) {
	o.Namespace = namespace
}

// WithService adds the service to the get describe release service environment params
func (o *GetDescribeReleaseServiceEnvironmentParams) WithService(service string) *GetDescribeReleaseServiceEnvironmentParams {
	o.SetService(service)
	return o
}

// SetService adds the service to the get describe release service environment params
func (o *GetDescribeReleaseServiceEnvironmentParams) SetService(service string) {
	o.Service = service
}

// WriteToRequest writes these params to a swagger request
func (o *GetDescribeReleaseServiceEnvironmentParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Count != nil {

		// query param count
		var qrCount int64

		if o.Count != nil {
			qrCount = *o.Count
		}
		qCount := swag.FormatInt64(qrCount)
		if qCount != "" {

			if err := r.SetQueryParam("count", qCount); err != nil {
				return err
			}
		}
	}

	// path param environment
	if err := r.SetPathParam("environment", o.Environment); err != nil {
		return err
	}

	if o.Namespace != nil {

		// query param namespace
		var qrNamespace string

		if o.Namespace != nil {
			qrNamespace = *o.Namespace
		}
		qNamespace := qrNamespace
		if qNamespace != "" {

			if err := r.SetQueryParam("namespace", qNamespace); err != nil {
				return err
			}
		}
	}

	// path param service
	if err := r.SetPathParam("service", o.Service); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
