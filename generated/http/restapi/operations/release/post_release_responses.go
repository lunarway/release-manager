// Code generated by go-swagger; DO NOT EDIT.

package release

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/lunarway/release-manager/generated/http/models"
)

// PostReleaseOKCode is the HTTP code returned for type PostReleaseOK
const PostReleaseOKCode int = 200

/*PostReleaseOK OK

swagger:response postReleaseOK
*/
type PostReleaseOK struct {
	/*Allowed origins

	 */
	AccessControlAllowOrigin string `json:"Access-Control-Allow-Origin"`

	/*
	  In: Body
	*/
	Payload *models.ReleaseResponse `json:"body,omitempty"`
}

// NewPostReleaseOK creates PostReleaseOK with default headers values
func NewPostReleaseOK() *PostReleaseOK {

	return &PostReleaseOK{}
}

// WithAccessControlAllowOrigin adds the accessControlAllowOrigin to the post release o k response
func (o *PostReleaseOK) WithAccessControlAllowOrigin(accessControlAllowOrigin string) *PostReleaseOK {
	o.AccessControlAllowOrigin = accessControlAllowOrigin
	return o
}

// SetAccessControlAllowOrigin sets the accessControlAllowOrigin to the post release o k response
func (o *PostReleaseOK) SetAccessControlAllowOrigin(accessControlAllowOrigin string) {
	o.AccessControlAllowOrigin = accessControlAllowOrigin
}

// WithPayload adds the payload to the post release o k response
func (o *PostReleaseOK) WithPayload(payload *models.ReleaseResponse) *PostReleaseOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post release o k response
func (o *PostReleaseOK) SetPayload(payload *models.ReleaseResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostReleaseOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header Access-Control-Allow-Origin

	accessControlAllowOrigin := o.AccessControlAllowOrigin
	if accessControlAllowOrigin != "" {
		rw.Header().Set("Access-Control-Allow-Origin", accessControlAllowOrigin)
	}

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostReleaseBadRequestCode is the HTTP code returned for type PostReleaseBadRequest
const PostReleaseBadRequestCode int = 400

/*PostReleaseBadRequest Invalid payload

swagger:response postReleaseBadRequest
*/
type PostReleaseBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewPostReleaseBadRequest creates PostReleaseBadRequest with default headers values
func NewPostReleaseBadRequest() *PostReleaseBadRequest {

	return &PostReleaseBadRequest{}
}

// WithPayload adds the payload to the post release bad request response
func (o *PostReleaseBadRequest) WithPayload(payload *models.ErrorResponse) *PostReleaseBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post release bad request response
func (o *PostReleaseBadRequest) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostReleaseBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostReleaseUnauthorizedCode is the HTTP code returned for type PostReleaseUnauthorized
const PostReleaseUnauthorizedCode int = 401

/*PostReleaseUnauthorized Provided access token was not found or is invalid

swagger:response postReleaseUnauthorized
*/
type PostReleaseUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewPostReleaseUnauthorized creates PostReleaseUnauthorized with default headers values
func NewPostReleaseUnauthorized() *PostReleaseUnauthorized {

	return &PostReleaseUnauthorized{}
}

// WithPayload adds the payload to the post release unauthorized response
func (o *PostReleaseUnauthorized) WithPayload(payload *models.ErrorResponse) *PostReleaseUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post release unauthorized response
func (o *PostReleaseUnauthorized) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostReleaseUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostReleaseInternalServerErrorCode is the HTTP code returned for type PostReleaseInternalServerError
const PostReleaseInternalServerErrorCode int = 500

/*PostReleaseInternalServerError Error response

swagger:response postReleaseInternalServerError
*/
type PostReleaseInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewPostReleaseInternalServerError creates PostReleaseInternalServerError with default headers values
func NewPostReleaseInternalServerError() *PostReleaseInternalServerError {

	return &PostReleaseInternalServerError{}
}

// WithPayload adds the payload to the post release internal server error response
func (o *PostReleaseInternalServerError) WithPayload(payload *models.ErrorResponse) *PostReleaseInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post release internal server error response
func (o *PostReleaseInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostReleaseInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostReleaseServiceUnavailableCode is the HTTP code returned for type PostReleaseServiceUnavailable
const PostReleaseServiceUnavailableCode int = 503

/*PostReleaseServiceUnavailable Error response

swagger:response postReleaseServiceUnavailable
*/
type PostReleaseServiceUnavailable struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewPostReleaseServiceUnavailable creates PostReleaseServiceUnavailable with default headers values
func NewPostReleaseServiceUnavailable() *PostReleaseServiceUnavailable {

	return &PostReleaseServiceUnavailable{}
}

// WithPayload adds the payload to the post release service unavailable response
func (o *PostReleaseServiceUnavailable) WithPayload(payload *models.ErrorResponse) *PostReleaseServiceUnavailable {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post release service unavailable response
func (o *PostReleaseServiceUnavailable) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostReleaseServiceUnavailable) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(503)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
