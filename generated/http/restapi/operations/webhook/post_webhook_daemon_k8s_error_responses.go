// Code generated by go-swagger; DO NOT EDIT.

package webhook

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/lunarway/release-manager/generated/http/models"
)

// PostWebhookDaemonK8sErrorOKCode is the HTTP code returned for type PostWebhookDaemonK8sErrorOK
const PostWebhookDaemonK8sErrorOKCode int = 200

/*PostWebhookDaemonK8sErrorOK OK

swagger:response postWebhookDaemonK8sErrorOK
*/
type PostWebhookDaemonK8sErrorOK struct {

	/*
	  In: Body
	*/
	Payload models.EmptyWebhookResponse `json:"body,omitempty"`
}

// NewPostWebhookDaemonK8sErrorOK creates PostWebhookDaemonK8sErrorOK with default headers values
func NewPostWebhookDaemonK8sErrorOK() *PostWebhookDaemonK8sErrorOK {

	return &PostWebhookDaemonK8sErrorOK{}
}

// WithPayload adds the payload to the post webhook daemon k8s error o k response
func (o *PostWebhookDaemonK8sErrorOK) WithPayload(payload models.EmptyWebhookResponse) *PostWebhookDaemonK8sErrorOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post webhook daemon k8s error o k response
func (o *PostWebhookDaemonK8sErrorOK) SetPayload(payload models.EmptyWebhookResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostWebhookDaemonK8sErrorOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// PostWebhookDaemonK8sErrorUnauthorizedCode is the HTTP code returned for type PostWebhookDaemonK8sErrorUnauthorized
const PostWebhookDaemonK8sErrorUnauthorizedCode int = 401

/*PostWebhookDaemonK8sErrorUnauthorized Provided access token was not found or is invalid

swagger:response postWebhookDaemonK8sErrorUnauthorized
*/
type PostWebhookDaemonK8sErrorUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewPostWebhookDaemonK8sErrorUnauthorized creates PostWebhookDaemonK8sErrorUnauthorized with default headers values
func NewPostWebhookDaemonK8sErrorUnauthorized() *PostWebhookDaemonK8sErrorUnauthorized {

	return &PostWebhookDaemonK8sErrorUnauthorized{}
}

// WithPayload adds the payload to the post webhook daemon k8s error unauthorized response
func (o *PostWebhookDaemonK8sErrorUnauthorized) WithPayload(payload *models.ErrorResponse) *PostWebhookDaemonK8sErrorUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post webhook daemon k8s error unauthorized response
func (o *PostWebhookDaemonK8sErrorUnauthorized) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostWebhookDaemonK8sErrorUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
