// Code generated by go-swagger; DO NOT EDIT.

package webhook

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/lunarway/release-manager/generated/http/models"
)

// PostWebhookDaemonK8sJoberrorOKCode is the HTTP code returned for type PostWebhookDaemonK8sJoberrorOK
const PostWebhookDaemonK8sJoberrorOKCode int = 200

/*PostWebhookDaemonK8sJoberrorOK OK

swagger:response postWebhookDaemonK8sJoberrorOK
*/
type PostWebhookDaemonK8sJoberrorOK struct {

	/*
	  In: Body
	*/
	Payload models.EmptyWebhookResponse `json:"body,omitempty"`
}

// NewPostWebhookDaemonK8sJoberrorOK creates PostWebhookDaemonK8sJoberrorOK with default headers values
func NewPostWebhookDaemonK8sJoberrorOK() *PostWebhookDaemonK8sJoberrorOK {

	return &PostWebhookDaemonK8sJoberrorOK{}
}

// WithPayload adds the payload to the post webhook daemon k8s joberror o k response
func (o *PostWebhookDaemonK8sJoberrorOK) WithPayload(payload models.EmptyWebhookResponse) *PostWebhookDaemonK8sJoberrorOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post webhook daemon k8s joberror o k response
func (o *PostWebhookDaemonK8sJoberrorOK) SetPayload(payload models.EmptyWebhookResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostWebhookDaemonK8sJoberrorOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// PostWebhookDaemonK8sJoberrorUnauthorizedCode is the HTTP code returned for type PostWebhookDaemonK8sJoberrorUnauthorized
const PostWebhookDaemonK8sJoberrorUnauthorizedCode int = 401

/*PostWebhookDaemonK8sJoberrorUnauthorized Provided access token was not found or is invalid

swagger:response postWebhookDaemonK8sJoberrorUnauthorized
*/
type PostWebhookDaemonK8sJoberrorUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewPostWebhookDaemonK8sJoberrorUnauthorized creates PostWebhookDaemonK8sJoberrorUnauthorized with default headers values
func NewPostWebhookDaemonK8sJoberrorUnauthorized() *PostWebhookDaemonK8sJoberrorUnauthorized {

	return &PostWebhookDaemonK8sJoberrorUnauthorized{}
}

// WithPayload adds the payload to the post webhook daemon k8s joberror unauthorized response
func (o *PostWebhookDaemonK8sJoberrorUnauthorized) WithPayload(payload *models.ErrorResponse) *PostWebhookDaemonK8sJoberrorUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post webhook daemon k8s joberror unauthorized response
func (o *PostWebhookDaemonK8sJoberrorUnauthorized) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostWebhookDaemonK8sJoberrorUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PostWebhookDaemonK8sJoberrorInternalServerErrorCode is the HTTP code returned for type PostWebhookDaemonK8sJoberrorInternalServerError
const PostWebhookDaemonK8sJoberrorInternalServerErrorCode int = 500

/*PostWebhookDaemonK8sJoberrorInternalServerError Error response

swagger:response postWebhookDaemonK8sJoberrorInternalServerError
*/
type PostWebhookDaemonK8sJoberrorInternalServerError struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewPostWebhookDaemonK8sJoberrorInternalServerError creates PostWebhookDaemonK8sJoberrorInternalServerError with default headers values
func NewPostWebhookDaemonK8sJoberrorInternalServerError() *PostWebhookDaemonK8sJoberrorInternalServerError {

	return &PostWebhookDaemonK8sJoberrorInternalServerError{}
}

// WithPayload adds the payload to the post webhook daemon k8s joberror internal server error response
func (o *PostWebhookDaemonK8sJoberrorInternalServerError) WithPayload(payload *models.ErrorResponse) *PostWebhookDaemonK8sJoberrorInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post webhook daemon k8s joberror internal server error response
func (o *PostWebhookDaemonK8sJoberrorInternalServerError) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostWebhookDaemonK8sJoberrorInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
