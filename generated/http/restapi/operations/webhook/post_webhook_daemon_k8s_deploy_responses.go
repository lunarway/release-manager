// Code generated by go-swagger; DO NOT EDIT.

package webhook

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/lunarway/release-manager/generated/http/models"
)

// PostWebhookDaemonK8sDeployOKCode is the HTTP code returned for type PostWebhookDaemonK8sDeployOK
const PostWebhookDaemonK8sDeployOKCode int = 200

/*PostWebhookDaemonK8sDeployOK OK

swagger:response postWebhookDaemonK8sDeployOK
*/
type PostWebhookDaemonK8sDeployOK struct {

	/*
	  In: Body
	*/
	Payload models.EmptyWebhookResponse `json:"body,omitempty"`
}

// NewPostWebhookDaemonK8sDeployOK creates PostWebhookDaemonK8sDeployOK with default headers values
func NewPostWebhookDaemonK8sDeployOK() *PostWebhookDaemonK8sDeployOK {

	return &PostWebhookDaemonK8sDeployOK{}
}

// WithPayload adds the payload to the post webhook daemon k8s deploy o k response
func (o *PostWebhookDaemonK8sDeployOK) WithPayload(payload models.EmptyWebhookResponse) *PostWebhookDaemonK8sDeployOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post webhook daemon k8s deploy o k response
func (o *PostWebhookDaemonK8sDeployOK) SetPayload(payload models.EmptyWebhookResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostWebhookDaemonK8sDeployOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// PostWebhookDaemonK8sDeployUnauthorizedCode is the HTTP code returned for type PostWebhookDaemonK8sDeployUnauthorized
const PostWebhookDaemonK8sDeployUnauthorizedCode int = 401

/*PostWebhookDaemonK8sDeployUnauthorized Provided access token was not found or is invalid

swagger:response postWebhookDaemonK8sDeployUnauthorized
*/
type PostWebhookDaemonK8sDeployUnauthorized struct {

	/*
	  In: Body
	*/
	Payload *models.ErrorResponse `json:"body,omitempty"`
}

// NewPostWebhookDaemonK8sDeployUnauthorized creates PostWebhookDaemonK8sDeployUnauthorized with default headers values
func NewPostWebhookDaemonK8sDeployUnauthorized() *PostWebhookDaemonK8sDeployUnauthorized {

	return &PostWebhookDaemonK8sDeployUnauthorized{}
}

// WithPayload adds the payload to the post webhook daemon k8s deploy unauthorized response
func (o *PostWebhookDaemonK8sDeployUnauthorized) WithPayload(payload *models.ErrorResponse) *PostWebhookDaemonK8sDeployUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the post webhook daemon k8s deploy unauthorized response
func (o *PostWebhookDaemonK8sDeployUnauthorized) SetPayload(payload *models.ErrorResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PostWebhookDaemonK8sDeployUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
