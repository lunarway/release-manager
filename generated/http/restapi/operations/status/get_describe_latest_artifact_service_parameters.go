// Code generated by go-swagger; DO NOT EDIT.

package status

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/runtime/middleware"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// NewGetDescribeLatestArtifactServiceParams creates a new GetDescribeLatestArtifactServiceParams object
//
// There are no default values defined in the spec.
func NewGetDescribeLatestArtifactServiceParams() GetDescribeLatestArtifactServiceParams {

	return GetDescribeLatestArtifactServiceParams{}
}

// GetDescribeLatestArtifactServiceParams contains all the bound params for the get describe latest artifact service operation
// typically these are obtained from a http.Request
//
// swagger:parameters GetDescribeLatestArtifactService
type GetDescribeLatestArtifactServiceParams struct {

	// HTTP Request Object
	HTTPRequest *http.Request `json:"-"`

	/*Branch artifact originates from
	  Required: true
	  In: query
	*/
	Branch string
	/*Service to find artifact for
	  Required: true
	  In: path
	*/
	Service string
}

// BindRequest both binds and validates a request, it assumes that complex things implement a Validatable(strfmt.Registry) error interface
// for simple values it will use straight method calls.
//
// To ensure default values, the struct must have been initialized with NewGetDescribeLatestArtifactServiceParams() beforehand.
func (o *GetDescribeLatestArtifactServiceParams) BindRequest(r *http.Request, route *middleware.MatchedRoute) error {
	var res []error

	o.HTTPRequest = r

	qs := runtime.Values(r.URL.Query())

	qBranch, qhkBranch, _ := qs.GetOK("branch")
	if err := o.bindBranch(qBranch, qhkBranch, route.Formats); err != nil {
		res = append(res, err)
	}

	rService, rhkService, _ := route.Params.GetOK("service")
	if err := o.bindService(rService, rhkService, route.Formats); err != nil {
		res = append(res, err)
	}
	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// bindBranch binds and validates parameter Branch from query.
func (o *GetDescribeLatestArtifactServiceParams) bindBranch(rawData []string, hasKey bool, formats strfmt.Registry) error {
	if !hasKey {
		return errors.Required("branch", "query", rawData)
	}
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	// Required: true
	// AllowEmptyValue: false

	if err := validate.RequiredString("branch", "query", raw); err != nil {
		return err
	}
	o.Branch = raw

	return nil
}

// bindService binds and validates parameter Service from path.
func (o *GetDescribeLatestArtifactServiceParams) bindService(rawData []string, hasKey bool, formats strfmt.Registry) error {
	var raw string
	if len(rawData) > 0 {
		raw = rawData[len(rawData)-1]
	}

	// Required: true
	// Parameter is provided by construction from the route
	o.Service = raw

	return nil
}
