// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protos/releasemanager.proto

/*
Package grpc is a generated protocol buffer package.

It is generated from these files:
	protos/releasemanager.proto

It has these top-level messages:
	PromoteRequest
	PromoteResponse
	StatusRequest
	Environment
	StatusResponse
*/
package grpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc1 "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PromoteRequest struct {
	Service     string `protobuf:"bytes,1,opt,name=service" json:"service,omitempty"`
	Environment string `protobuf:"bytes,2,opt,name=environment" json:"environment,omitempty"`
}

func (m *PromoteRequest) Reset()                    { *m = PromoteRequest{} }
func (m *PromoteRequest) String() string            { return proto.CompactTextString(m) }
func (*PromoteRequest) ProtoMessage()               {}
func (*PromoteRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *PromoteRequest) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *PromoteRequest) GetEnvironment() string {
	if m != nil {
		return m.Environment
	}
	return ""
}

type PromoteResponse struct {
	Service         string `protobuf:"bytes,1,opt,name=service" json:"service,omitempty"`
	FromEnvironment string `protobuf:"bytes,2,opt,name=fromEnvironment" json:"fromEnvironment,omitempty"`
	Status          string `protobuf:"bytes,3,opt,name=status" json:"status,omitempty"`
	ToEnvironment   string `protobuf:"bytes,4,opt,name=toEnvironment" json:"toEnvironment,omitempty"`
	Tag             string `protobuf:"bytes,5,opt,name=tag" json:"tag,omitempty"`
}

func (m *PromoteResponse) Reset()                    { *m = PromoteResponse{} }
func (m *PromoteResponse) String() string            { return proto.CompactTextString(m) }
func (*PromoteResponse) ProtoMessage()               {}
func (*PromoteResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *PromoteResponse) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *PromoteResponse) GetFromEnvironment() string {
	if m != nil {
		return m.FromEnvironment
	}
	return ""
}

func (m *PromoteResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *PromoteResponse) GetToEnvironment() string {
	if m != nil {
		return m.ToEnvironment
	}
	return ""
}

func (m *PromoteResponse) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

type StatusRequest struct {
	Service string `protobuf:"bytes,1,opt,name=service" json:"service,omitempty"`
}

func (m *StatusRequest) Reset()                    { *m = StatusRequest{} }
func (m *StatusRequest) String() string            { return proto.CompactTextString(m) }
func (*StatusRequest) ProtoMessage()               {}
func (*StatusRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *StatusRequest) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

type Environment struct {
	Tag                   string `protobuf:"bytes,1,opt,name=tag" json:"tag,omitempty"`
	Committer             string `protobuf:"bytes,2,opt,name=committer" json:"committer,omitempty"`
	Author                string `protobuf:"bytes,3,opt,name=author" json:"author,omitempty"`
	Message               string `protobuf:"bytes,4,opt,name=message" json:"message,omitempty"`
	Date                  int64  `protobuf:"varint,5,opt,name=date" json:"date,omitempty"`
	BuildUrl              string `protobuf:"bytes,6,opt,name=buildUrl" json:"buildUrl,omitempty"`
	HighVulnerabilities   int64  `protobuf:"varint,7,opt,name=highVulnerabilities" json:"highVulnerabilities,omitempty"`
	MediumVulnerabilities int64  `protobuf:"varint,8,opt,name=mediumVulnerabilities" json:"mediumVulnerabilities,omitempty"`
	LowVulnerabilities    int64  `protobuf:"varint,9,opt,name=lowVulnerabilities" json:"lowVulnerabilities,omitempty"`
}

func (m *Environment) Reset()                    { *m = Environment{} }
func (m *Environment) String() string            { return proto.CompactTextString(m) }
func (*Environment) ProtoMessage()               {}
func (*Environment) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Environment) GetTag() string {
	if m != nil {
		return m.Tag
	}
	return ""
}

func (m *Environment) GetCommitter() string {
	if m != nil {
		return m.Committer
	}
	return ""
}

func (m *Environment) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

func (m *Environment) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Environment) GetDate() int64 {
	if m != nil {
		return m.Date
	}
	return 0
}

func (m *Environment) GetBuildUrl() string {
	if m != nil {
		return m.BuildUrl
	}
	return ""
}

func (m *Environment) GetHighVulnerabilities() int64 {
	if m != nil {
		return m.HighVulnerabilities
	}
	return 0
}

func (m *Environment) GetMediumVulnerabilities() int64 {
	if m != nil {
		return m.MediumVulnerabilities
	}
	return 0
}

func (m *Environment) GetLowVulnerabilities() int64 {
	if m != nil {
		return m.LowVulnerabilities
	}
	return 0
}

type StatusResponse struct {
	Dev     *Environment `protobuf:"bytes,1,opt,name=dev" json:"dev,omitempty"`
	Staging *Environment `protobuf:"bytes,2,opt,name=staging" json:"staging,omitempty"`
	Prod    *Environment `protobuf:"bytes,3,opt,name=prod" json:"prod,omitempty"`
}

func (m *StatusResponse) Reset()                    { *m = StatusResponse{} }
func (m *StatusResponse) String() string            { return proto.CompactTextString(m) }
func (*StatusResponse) ProtoMessage()               {}
func (*StatusResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *StatusResponse) GetDev() *Environment {
	if m != nil {
		return m.Dev
	}
	return nil
}

func (m *StatusResponse) GetStaging() *Environment {
	if m != nil {
		return m.Staging
	}
	return nil
}

func (m *StatusResponse) GetProd() *Environment {
	if m != nil {
		return m.Prod
	}
	return nil
}

func init() {
	proto.RegisterType((*PromoteRequest)(nil), "releasemanager.PromoteRequest")
	proto.RegisterType((*PromoteResponse)(nil), "releasemanager.PromoteResponse")
	proto.RegisterType((*StatusRequest)(nil), "releasemanager.StatusRequest")
	proto.RegisterType((*Environment)(nil), "releasemanager.Environment")
	proto.RegisterType((*StatusResponse)(nil), "releasemanager.StatusResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc1.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc1.SupportPackageIsVersion4

// Client API for ReleaseManager service

type ReleaseManagerClient interface {
	Promote(ctx context.Context, in *PromoteRequest, opts ...grpc1.CallOption) (*PromoteResponse, error)
	Status(ctx context.Context, in *StatusRequest, opts ...grpc1.CallOption) (*StatusResponse, error)
}

type releaseManagerClient struct {
	cc *grpc1.ClientConn
}

func NewReleaseManagerClient(cc *grpc1.ClientConn) ReleaseManagerClient {
	return &releaseManagerClient{cc}
}

func (c *releaseManagerClient) Promote(ctx context.Context, in *PromoteRequest, opts ...grpc1.CallOption) (*PromoteResponse, error) {
	out := new(PromoteResponse)
	err := grpc1.Invoke(ctx, "/releasemanager.ReleaseManager/Promote", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *releaseManagerClient) Status(ctx context.Context, in *StatusRequest, opts ...grpc1.CallOption) (*StatusResponse, error) {
	out := new(StatusResponse)
	err := grpc1.Invoke(ctx, "/releasemanager.ReleaseManager/Status", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ReleaseManager service

type ReleaseManagerServer interface {
	Promote(context.Context, *PromoteRequest) (*PromoteResponse, error)
	Status(context.Context, *StatusRequest) (*StatusResponse, error)
}

func RegisterReleaseManagerServer(s *grpc1.Server, srv ReleaseManagerServer) {
	s.RegisterService(&_ReleaseManager_serviceDesc, srv)
}

func _ReleaseManager_Promote_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(PromoteRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReleaseManagerServer).Promote(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/releasemanager.ReleaseManager/Promote",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReleaseManagerServer).Promote(ctx, req.(*PromoteRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ReleaseManager_Status_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc1.UnaryServerInterceptor) (interface{}, error) {
	in := new(StatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReleaseManagerServer).Status(ctx, in)
	}
	info := &grpc1.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/releasemanager.ReleaseManager/Status",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReleaseManagerServer).Status(ctx, req.(*StatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ReleaseManager_serviceDesc = grpc1.ServiceDesc{
	ServiceName: "releasemanager.ReleaseManager",
	HandlerType: (*ReleaseManagerServer)(nil),
	Methods: []grpc1.MethodDesc{
		{
			MethodName: "Promote",
			Handler:    _ReleaseManager_Promote_Handler,
		},
		{
			MethodName: "Status",
			Handler:    _ReleaseManager_Status_Handler,
		},
	},
	Streams:  []grpc1.StreamDesc{},
	Metadata: "protos/releasemanager.proto",
}

func init() { proto.RegisterFile("protos/releasemanager.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 428 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x53, 0xcd, 0x6e, 0xd3, 0x40,
	0x10, 0xc6, 0x4d, 0xb0, 0x9b, 0x89, 0xea, 0xa2, 0x41, 0x20, 0x2b, 0x85, 0x52, 0x59, 0x1c, 0xca,
	0x81, 0x14, 0x15, 0x78, 0x01, 0x24, 0x0e, 0x48, 0x45, 0x42, 0x46, 0x70, 0xe0, 0xb6, 0x89, 0x07,
	0x67, 0x25, 0xaf, 0xd7, 0xec, 0xae, 0xc3, 0x13, 0x21, 0xc4, 0x13, 0xf0, 0x7a, 0xc8, 0x63, 0x3b,
	0xc4, 0xc6, 0x25, 0x37, 0xcf, 0x7c, 0x3f, 0x9e, 0xf9, 0x34, 0x0b, 0x67, 0xa5, 0xd1, 0x4e, 0xdb,
	0x2b, 0x43, 0x39, 0x09, 0x4b, 0x4a, 0x14, 0x22, 0x23, 0xb3, 0xe4, 0x2e, 0x86, 0xfd, 0x6e, 0x7c,
	0x03, 0xe1, 0x07, 0xa3, 0x95, 0x76, 0x94, 0xd0, 0xb7, 0x8a, 0xac, 0xc3, 0x08, 0x02, 0x4b, 0x66,
	0x2b, 0xd7, 0x14, 0x79, 0x17, 0xde, 0xe5, 0x2c, 0xe9, 0x4a, 0xbc, 0x80, 0x39, 0x15, 0x5b, 0x69,
	0x74, 0xa1, 0xa8, 0x70, 0xd1, 0x11, 0xa3, 0xfb, 0xad, 0xf8, 0x87, 0x07, 0xa7, 0x3b, 0x3b, 0x5b,
	0xea, 0xc2, 0xd2, 0x7f, 0xfc, 0x2e, 0xe1, 0xf4, 0xab, 0xd1, 0xea, 0xed, 0x3f, 0x9e, 0xc3, 0x36,
	0x3e, 0x04, 0xdf, 0x3a, 0xe1, 0x2a, 0x1b, 0x4d, 0x98, 0xd0, 0x56, 0xf8, 0x14, 0x4e, 0x9c, 0xde,
	0xd7, 0x4f, 0x19, 0xee, 0x37, 0xf1, 0x1e, 0x4c, 0x9c, 0xc8, 0xa2, 0xbb, 0x8c, 0xd5, 0x9f, 0xf1,
	0x33, 0x38, 0xf9, 0xc8, 0x0e, 0x07, 0x97, 0x8e, 0x7f, 0x1f, 0xc1, 0x7c, 0xc4, 0xcc, 0xdb, 0x99,
	0xe1, 0x23, 0x98, 0xad, 0xb5, 0x52, 0xd2, 0x39, 0x32, 0xed, 0x02, 0x7f, 0x1b, 0xf5, 0xe8, 0xa2,
	0x72, 0x1b, 0x6d, 0xba, 0xd1, 0x9b, 0xaa, 0xfe, 0xa3, 0x22, 0x6b, 0x45, 0x46, 0xed, 0xd0, 0x5d,
	0x89, 0x08, 0xd3, 0x54, 0x38, 0xe2, 0x79, 0x27, 0x09, 0x7f, 0xe3, 0x02, 0x8e, 0x57, 0x95, 0xcc,
	0xd3, 0x4f, 0x26, 0x8f, 0x7c, 0xa6, 0xef, 0x6a, 0x7c, 0x01, 0xf7, 0x37, 0x32, 0xdb, 0x7c, 0xae,
	0xf2, 0x82, 0x8c, 0x58, 0xc9, 0x5c, 0x3a, 0x49, 0x36, 0x0a, 0x58, 0x3e, 0x06, 0xe1, 0x2b, 0x78,
	0xa0, 0x28, 0x95, 0x95, 0x1a, 0x6a, 0x8e, 0x59, 0x33, 0x0e, 0xe2, 0x12, 0x30, 0xd7, 0xdf, 0x87,
	0x92, 0x19, 0x4b, 0x46, 0x90, 0xf8, 0xa7, 0x07, 0x61, 0x97, 0x72, 0x7b, 0x0b, 0xcf, 0x61, 0x92,
	0xd2, 0x96, 0xc3, 0x9b, 0x5f, 0x9f, 0x2d, 0x07, 0x17, 0xba, 0x17, 0x73, 0x52, 0xf3, 0xf0, 0x35,
	0x04, 0xd6, 0x89, 0x4c, 0x16, 0x19, 0xe7, 0x7a, 0x40, 0xd2, 0x71, 0xf1, 0x0a, 0xa6, 0xa5, 0xd1,
	0x29, 0x07, 0x7e, 0x40, 0xc3, 0xc4, 0xeb, 0x5f, 0x1e, 0x84, 0x49, 0x43, 0x7a, 0xdf, 0x90, 0xf0,
	0x06, 0x82, 0xf6, 0x90, 0xf1, 0x7c, 0x68, 0xd0, 0x7f, 0x30, 0x8b, 0x27, 0xb7, 0xe2, 0xcd, 0xd6,
	0xf1, 0x1d, 0x7c, 0x07, 0x7e, 0x93, 0x04, 0x3e, 0x1e, 0x92, 0x7b, 0x77, 0xb8, 0x38, 0xbf, 0x0d,
	0xee, 0xac, 0xde, 0xf8, 0x5f, 0xa6, 0x99, 0x29, 0xd7, 0x2b, 0x9f, 0xdf, 0xf3, 0xcb, 0x3f, 0x01,
	0x00, 0x00, 0xff, 0xff, 0x35, 0x44, 0x10, 0x66, 0xee, 0x03, 0x00, 0x00,
}
